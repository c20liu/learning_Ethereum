rlp：以太坊序列化方法，以太坊的所有对象都会使用RLP方法序列化为字节数组
     原则：把所有数据看成两大类数据组合，一类是字节数组，一类是类似于list的数据结构
     
源码文件说明：
  decode.go ： 解码器，把RLP数据解码为go的数据结构
  decode_tail_test.go/decode_test.go 解码器测试代码
  doc.go    ： 文档代码
  encode.go :  编码器，把go的数据结构序列化为字节数组
  encode_example_test.go
  raw.go    :  未解码的RLP数据
  raw_test.go
  typecache.go : 类型缓存，类型缓存记录了类型->(编码器|解码器)的内容
  
1. typecache.go 如何根据类型找到对应的编码器和解码器
   go不支持重载，也没有泛型，所以不能用同一个函数名（不同类型重载）来分派处理，只能通过自身的类型来快速的找到自己的编码器和解码器函数
   
